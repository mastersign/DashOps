<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:tools="clr-namespace:Mastersign.WpfTools"
    xmlns:local="clr-namespace:Mastersign.DashOps"
    xmlns:local1="clr-namespace:Mastersign.DashOps.Pages"
    x:Class="Mastersign.DashOps.Pages.MainPage"
    x:Name="main"
    Title="Main"
    Margin="0,4,0,0"
    mc:Ignorable="d" 
    d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type={x:Type local:DesignTimeProjectView}}"
    d:DesignHeight="450" d:DesignWidth="800"
    >

    <Page.Resources>
        <tools:BooleanToVisibilityConverter x:Key="Bool2Visibility" />
        <tools:BooleanToVisibilityConverter x:Key="InvertedBool2Visibility" Invert="True" />
        <tools:ValueConverterGroup x:Key="MonitorCount2Visibility">
            <tools:IntegerComparisonConverter Comparator="GreaterThen" Value="0" />
            <tools:BooleanToVisibilityConverter />
        </tools:ValueConverterGroup>
        <tools:BooleanToIntegerConverter x:Key="Boolean2ActionListColumnSpan" IfTrue="1" IfFalse="3" />
        <tools:ValueConverterGroup x:Key="MonitorCount2SpacerRowHeight">
            <tools:IntegerComparisonConverter Comparator="GreaterThen" Value="0" />
            <tools:BooleanToIntegerConverter IfTrue="10" IfFalse="20" />
        </tools:ValueConverterGroup>

        <Style x:Key="RegionStyle" TargetType="{x:Type Border}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{DynamicResource CardBorderBrush}" />
            <Setter Property="Background" Value="{DynamicResource CardBackground}" />
            <Setter Property="CornerRadius" Value="6" />
        </Style>

        <Style x:Key="PerspectiveButtonStyle" TargetType="{x:Type ui:Button}"
               BasedOn="{StaticResource DefaultUiButtonStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="true">
                    <Setter Property="Appearance" Value="Primary" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PlayPauseButtonStyle" TargetType="{x:Type ui:Button}"
               BasedOn="{StaticResource DefaultUiButtonStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMonitoringPaused}" Value="true">
                    <Setter Property="Icon" Value="{ui:SymbolIcon FontSize=20, Symbol=Play20}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMonitoringPaused}" Value="false">
                    <Setter Property="Icon" Value="{ui:SymbolIcon FontSize=20, Symbol=Pause20}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ActionButtonStyle" TargetType="{x:Type ui:Button}"
               BasedOn="{StaticResource DefaultUiButtonStyle}">
            <Setter Property="Margin" Value="0,0,0,8" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="Height" Value="38" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>

        <Style x:Key="ActionAddButtonStyle" TargetType="{x:Type ui:Button}"
               BasedOn="{StaticResource DefaultUiButtonStyle}">
            <Setter Property="Margin" Value="4,0,0,0" />
            <Setter Property="Padding" Value="4,0" />
            <Setter Property="Width" Value="38" />
            <Setter Property="Height" Value="38" />
        </Style>
        <Style x:Key="ActionAddSplitButtonLeftStyle" TargetType="{x:Type ui:Button}" 
               BasedOn="{StaticResource ActionAddButtonStyle}">
            <Setter Property="CornerRadius" Value="4,0,0,4" />
            <Setter Property="BorderThickness" Value="1,1,0,1" />
        </Style>
        <Style x:Key="ActionAddSplitButtonDropDownStyle" TargetType="{x:Type ui:Button}"
               BasedOn="{StaticResource ActionAddButtonStyle}">
            <Setter Property="CornerRadius" Value="0,4,4,0" />
            <Setter Property="BorderThickness" Value="0,1,1,1" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Padding" Value="4,5,6,5" />
            <Setter Property="Width" Value="Auto" />
        </Style>

        <Style x:Key="MonitorAddButtonStyle" TargetType="{x:Type ui:Button}"
               BasedOn="{StaticResource DefaultUiButtonStyle}">
            <Setter Property="Margin" Value="4,0,0,0" />
            <Setter Property="Padding" Value="4,0" />
            <Setter Property="Width" Value="32" />
            <Setter Property="Height" Value="32" />
        </Style>
        <Style x:Key="MonitorAddSplitButtonLeftStyle" TargetType="{x:Type ui:Button}" 
               BasedOn="{StaticResource MonitorAddButtonStyle}">
            <Setter Property="CornerRadius" Value="4,0,0,4" />
            <Setter Property="BorderThickness" Value="1,1,0,1" />
        </Style>
        <Style x:Key="MonitorAddSplitButtonDropDownStyle" TargetType="{x:Type ui:Button}"
               BasedOn="{StaticResource MonitorAddButtonStyle}">
            <Setter Property="CornerRadius" Value="0,4,4,0" />
            <Setter Property="BorderThickness" Value="0,1,1,1" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Padding" Value="2,4,4,4" />
            <Setter Property="Width" Value="Auto" />
        </Style>

    </Page.Resources>

    <Page.CommandBindings>
    </Page.CommandBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="{Binding MonitorViews.Count, Converter={StaticResource MonitorCount2SpacerRowHeight}}" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" MaxWidth="300"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="1*" MaxWidth="150"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ItemsControl x:Name="Perspectives"
                Grid.ColumnSpan="3"
                Margin="20,16,20,20"
                ItemsSource="{Binding Perspectives}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" CanHorizontallyScroll="True" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <ui:Button Content="{Binding Title}"
                            Margin="0,0,4,0" Height="Auto"
                            Command="local:DashOpsCommands.SwitchPerspective"
                            CommandParameter="{Binding}"
                            Style="{StaticResource PerspectiveButtonStyle}"
                            />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <StackPanel x:Name="MonitorControl"
                Grid.Row="0" Grid.Column="3" Orientation="Horizontal"
                Margin="0,16,20,20" Grid.ColumnSpan="1" FlowDirection="RightToLeft">
            <Grid Visibility="{Binding MonitorViews.Count, Converter={StaticResource MonitorCount2Visibility}}">
                <ui:Button
                        Padding="6,4" Margin="0,0,4,0"
                        Icon="{ui:SymbolIcon FontSize=20, Symbol=PanelRightContract20}"
                        Command="local:DashOpsCommands.ToggleMonitorPanel"
                        Visibility="{Binding ShowMonitorPanel, Converter={StaticResource Bool2Visibility}}" />
                <ui:Button
                        Padding="6,4" Margin="0,0,4,0"
                        Icon="{ui:SymbolIcon FontSize=20, Symbol=PanelRightExpand20}"
                        Command="local:DashOpsCommands.ToggleMonitorPanel"
                        Visibility="{Binding ShowMonitorPanel, Converter={StaticResource InvertedBool2Visibility}}" />
            </Grid>

            <ui:Button
                    Padding="6,4" Margin="0,0,4,0"
                    Command="local:DashOpsCommands.EditProject"
                    Icon="{ui:SymbolIcon FontSize=20, Symbol=EditSettings20}"/>
            <ui:Button
                    Padding="6,4" Margin="0,0,4,0"
                    Command="local:DashOpsCommands.RefreshProject"
                    Icon="{ui:SymbolIcon FontSize=20, Symbol=ArrowClockwise20}"/>
            <ui:Button
                    Padding="6,4" Margin="0,0,4,0"
                    Command="local:DashOpsCommands.ToggleMonitorsPaused"
                    Style="{StaticResource PlayPauseButtonStyle}"
                    Visibility="{Binding MonitorViews.Count, Converter={StaticResource MonitorCount2Visibility}}"/>
        </StackPanel>

        <Border x:Name="ActionSubsetSection" 
                Grid.Column="0" Grid.Row="1" SnapsToDevicePixels="True"
                Margin="20,0,0,0" Padding="0"
                Style="{StaticResource RegionStyle}">
            <Border.OpacityMask>
                <VisualBrush>
                    <VisualBrush.Visual>
                        <Border
                                Background="Black"
                                SnapsToDevicePixels="True"
                                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}"
                                Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}"
                                Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}"
                                />
                    </VisualBrush.Visual>
                </VisualBrush>
            </Border.OpacityMask>

            <ListBox x:Name="ActionSubsetList"
                    BorderThickness="0" Margin="0" Padding="0"
                    ItemsSource="{Binding CurrentPerspective.Subsets}"
                    SelectedItem="{Binding CurrentPerspective.CurrentSubset}">
            </ListBox>
        </Border>

        <ItemsControl x:Name="ActionList"
                Grid.Row="1" Grid.Column="1"
                Grid.ColumnSpan="{Binding ShowMonitorPanel, Converter={StaticResource Boolean2ActionListColumnSpan}}"
                Margin="10,1,2,0"
                ItemsSource="{Binding CurrentPerspective.CurrentSubset.Actions}">
            <ItemsControl.Style>
                <Style TargetType="ItemsControl" BasedOn="{StaticResource VirtualizedScrollableItemsControl}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasMonitors}" Value="false">
                            <Setter Property="Grid.ColumnSpan" Value="3" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,0,18,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ui:Button x:Name="ActionButton"
                                Style="{StaticResource ActionButtonStyle}"
                                HorizontalContentAlignment="Stretch">
                            <ui:Button.InputBindings>
                                <MouseBinding Gesture="LeftClick"
                                        Command="local:DashOpsCommands.ExecuteAction"
                                        CommandParameter="{Binding}" />
                            </ui:Button.InputBindings>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
                                <ui:SymbolIcon
                                            Grid.Column="1" Margin="4,0,0,0"
                                            FontSize="20" Symbol="Shield20"
                                            Foreground="{StaticResource PaletteOrangeBrush}"
                                            Visibility="{Binding Reassure, Converter={StaticResource Bool2Visibility}}">
                                </ui:SymbolIcon>
                            </Grid>
                        </ui:Button>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0,0,0,8">
                            <ui:Button
                                    Command="local:DashOpsCommands.ShowLastLog"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource ActionAddSplitButtonLeftStyle}">
                                <ui:SymbolIcon FontSize="20">
                                    <ui:SymbolIcon.Style>
                                        <Style>
                                            <Setter Property="ui:SymbolIcon.Symbol" Value="{x:Static ui:SymbolRegular.DocumentTextClock20}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ui:Button}}}" Value="False">
                                                    <Setter Property="ui:IconElement.Foreground" Value="{DynamicResource ButtonForegroundDisabled}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static local:ActionStatus.StartError}">
                                                    <Setter Property="ui:IconElement.Foreground" Value="{StaticResource PaletteRedBrush}" />
                                                    <Setter Property="ui:SymbolIcon.Symbol" Value="{x:Static ui:SymbolRegular.DocumentDismiss20}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static local:ActionStatus.Running}">
                                                    <Setter Property="ui:IconElement.Foreground" Value="{StaticResource PaletteLightBlueBrush}" />
                                                    <Setter Property="ui:SymbolIcon.Symbol" Value="{x:Static ui:SymbolRegular.DocumentSync20}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static local:ActionStatus.Success}">
                                                    <Setter Property="ui:IconElement.Foreground" Value="{StaticResource PaletteGreenBrush}" />
                                                    <Setter Property="ui:SymbolIcon.Symbol" Value="{x:Static ui:SymbolRegular.DocumentCheckmark20}" />
                                                    <Setter Property="ui:SymbolIcon.Filled" Value="True" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static local:ActionStatus.SuccessWithoutLogFile}">
                                                    <Setter Property="ui:IconElement.Foreground" Value="{StaticResource PaletteGreenBrush}" />
                                                    <Setter Property="ui:SymbolIcon.Symbol" Value="{x:Static ui:SymbolRegular.DocumentCheckmark20}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static local:ActionStatus.Failed}">
                                                    <Setter Property="ui:IconElement.Foreground" Value="{StaticResource PaletteRedBrush}" />
                                                    <Setter Property="ui:SymbolIcon.Symbol" Value="{x:Static ui:SymbolRegular.DocumentError20}" />
                                                    <Setter Property="ui:SymbolIcon.Filled" Value="True" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="{x:Static local:ActionStatus.FailedWithoutLogFile}">
                                                    <Setter Property="ui:IconElement.Foreground" Value="{StaticResource PaletteRedBrush}" />
                                                    <Setter Property="ui:SymbolIcon.Symbol" Value="{x:Static ui:SymbolRegular.DocumentError20}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ui:SymbolIcon.Style>
                                </ui:SymbolIcon>
                            </ui:Button>
                            <ui:Button
                                    Tag="{Binding}"
                                    Command="local:DashOpsCommands.ShowLogHistoryContextMenu"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                    Style="{StaticResource ActionAddSplitButtonDropDownStyle}"
                                    Icon="{ui:SymbolIcon FontSize=10, Symbol=ChevronDown12}"/>
                            <ui:Button
                                    Command="local:DashOpsCommands.ShowActionInfo"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource ActionAddButtonStyle}"
                                    Icon="{ui:SymbolIcon FontSize=20, Symbol=Info20}" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Border x:Name="MonitorSection"
                Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Padding="6,14,0,8" Margin="0,0,19,0"
                Style="{StaticResource RegionStyle}"
                Visibility="{Binding ShowMonitorPanel, Converter={StaticResource Bool2Visibility}}">
            <ScrollViewer>
                <ItemsControl x:Name="Monitors"
                        Grid.IsSharedSizeScope="True"
                        ItemsSource="{Binding MonitorViews}" Margin="0,0,14,0">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,0,6">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MonitorStatusColumn" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MonitorButtonColumn" />
                                </Grid.ColumnDefinitions>
                                <ContentControl Width="32" Height="32">
                                    <ui:SymbolIcon Style="{StaticResource MonitorStatusIconStyle}" FontSize="24" />
                                </ContentControl>
                                <Label
                                        Grid.Column="1" Margin="8,0,8,0"
                                        VerticalContentAlignment="Center"
                                        Content="{Binding Title}"
                                        MouseDoubleClick="MonitorDoubleClickHandler" />
                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <ui:Button
                                            Command="local:DashOpsCommands.ShowLastLog"
                                            CommandParameter="{Binding}"
                                            Style="{StaticResource MonitorAddSplitButtonLeftStyle}"
                                            Icon="{ui:SymbolIcon FontSize=20, Symbol=DocumentBulletListClock20}" />
                                    <ui:Button
                                            Tag="{Binding}"
                                            Command="local:DashOpsCommands.ShowLogHistoryContextMenu"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                            Style="{StaticResource MonitorAddSplitButtonDropDownStyle}"
                                            Icon="{ui:SymbolIcon FontSize=10, Symbol=ChevronDown12}"/>
                                    <ui:Button
                                            Command="local:DashOpsCommands.ShowMonitorInfo"
                                            CommandParameter="{Binding}"
                                            Style="{StaticResource MonitorAddButtonStyle}"
                                            Icon="{ui:SymbolIcon FontSize=16, Symbol=Info16}"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Border>

        <local:MonitoringPanel
                x:Name="MonitoringPanel"
                Grid.Row="3" Grid.ColumnSpan="4" Margin="20,0,0,13"
                Visibility="{Binding MonitorViews.Count, Converter={StaticResource MonitorCount2Visibility}}"/>
    </Grid>
</Page>
